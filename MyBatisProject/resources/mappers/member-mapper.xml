<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
<!-- namespace : 해당 mapper 파일의 고유 명칭 -->


<!-- 
	* DML문일경우
	<insert id="각 sql문들을 식별가능한 식별자" parameterType="전달받은 데이터의 자료형 or 별칭">
		쿼리문 작성
	</insert>
	<update></update>
	<delete></delete>
	
	* SELECT문일 경우
	<select id="식별자" parameterType="자료형 or 별칭" resultType="조회결과로 반환하고자 하는
	자바 타입" 또는 resultMap="조회결과를 뽑아서 매핑할 resultMap의 id값">
		쿼리문
	</selcet>
	
	=> parameterType속성은 전달받을 값이 없으면 생략가능.
	=> 반드시 resultType이나, resultMap 둘중하나를 작성하여 결과값에 대한 타입을 지정해야함.
	
	* DML문의경우 어차피 실행결과가 처리된 행의 갯수(INT)이기 때문에 resultType이나 resultMap이
	불필요함.
	* ?대신에 sql문에 전달된 객체로부터 값을 꺼낼 때 #{필드명, 변수명, map의 키값}을 이용
	* 키값으로 넣어줄거면 만드시 vo 클래스에 getter 함수로 정의되어 있어야함
    * ${필드명, 변수명, map의 키값} : ''제거된 상태로 추가.(SqlInjection공격에 안전하지 않음.)
		
 -->
 
 <!-- 
 	* resultMap : 마이바티스의 핵심기능 중 하나
 	              ResultSet으로부터 조회된 칼럼값을 하나씩 뽑아서
 	              내가 지정한 VO객체에 각 필드에 매핑하는 과정을 줄여주는 역할 수행 
 	
 	<resultMap id="식별자" type="조회된 결과를 담아서 반환하고자 하는 VO객체의 타입 또는 별칭">
 		<result column="조회결과를 뽑고자 하는 db 칼럼명" property="해당결과를 담고자하는 필드명"/>
 		<result column="조회결과를 뽑고자 하는 db 칼럼명" property="해당결과를 담고자하는 필드명"/>
 		<result column="조회결과를 뽑고자 하는 db 칼럼명" property="해당결과를 담고자하는 필드명"/>
 		...
 	</resultMap>
  -->
  <resultMap id="memberResultSet" type="member">
  	<id column="USER_NO" property="userNo" />
  	<result column="USER_ID" property="userId" />
  	<result column="USER_PWD" property="userPwd"/>
  	<result column="USER_NAME" property="userName"/>
  	<result column="EMAIL" property="email" />
  </resultMap>
 
 
<select id="loginMember" parameterType="member" resultMap="memberResultSet"> <!-- resultType="member" -->
	SELECT  USER_NO ,
			USER_ID ,
			USER_PWD ,
			USER_NAME ,
			EMAIL,
			BIRTHDAY,
			GENDER,
			PHONE,
			ADDRESS
	FROM MEMBER 
	WHERE USER_ID = #{userId}
	  AND USER_PWD= #{userPwd}
	  AND STATUS  = 'Y'
</select>
 
 
<!-- <insert id="insertMember" parameterType="com.kh.member.model.vo.Member" > -->
<insert id="insertMember" parameterType="member">
	INSERT INTO MEMBER
	( USER_NO,
	  USER_ID,
	  USER_PWD,
	  USER_NAME,
	  EMAIL,
	  BIRTHDAY,
	  GENDER,
	  PHONE,
	  ADDRESS
	) VALUES (
	  SEQ_UNO.NEXTVAL,
	  #{userId},
	  #{userPwd},
	  #{userName},
	  #{email},
	  #{birthday},
	  #{gender},
	  #{phone},
	  #{address}
	)
</insert>
  
  
  
  
  
  
  
  
  
  
  
  
</mapper>